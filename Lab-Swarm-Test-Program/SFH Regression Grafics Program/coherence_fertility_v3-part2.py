#!/usr/bin/env python3
# charts_v3.py -- plots showing where the universe sits
# This script loads data from coherence_fertility_v3.py and generates
# three plots to visualize the universe's position.

import json
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from dataclasses import dataclass
from coherence_fertility_v3 import coherence, fertility, Params

def main():
    """
    Main function to load data, calculate universe scores, and plot the charts.
    """
    try:
        # Load the data generated by coherence_fertility_v3.py
        df = pd.read_csv('samples_v3.csv')
        pareto_df = pd.read_csv('pareto_v3.csv')
        print("Loaded sample and pareto data successfully.")

    except FileNotFoundError:
        print("Error: Could not find 'samples_v3.csv' or 'pareto_v3.csv'.")
        print("Please run coherence_fertility_v3.py first to generate the necessary data.")
        sys.exit(1)

    # Baselines for the Universe
    alpha_0 = 1.0 / 137.035999084
    mu_0 = 9.1093837015e-31
    alpha_s_0 = 0.1181
    G_0 = 6.67430e-11
    G_F_0 = 1.1663787e-5

    # Calculate coherence and fertility for the universe's parameters
    universe_params = Params(alpha=alpha_0, mu=mu_0, alpha_s=alpha_s_0, G=G_0, G_F=G_F_0)
    universe_coherence = coherence(universe_params)
    universe_fertility = fertility(universe_params)
    print(f"Universe Scores: Coherence = {universe_coherence:.4f}, Fertility = {universe_fertility:.4f}")

    # --- Plotting the charts ---
    # Create a figure with 3 subplots (1 row, 3 columns)
    fig, axes = plt.subplots(1, 3, figsize=(21, 7))

    # Plot 1: Coherence distribution with Universe's value
    ax1 = axes[0]
    ax1.hist(df['coherence'], bins=50, alpha=0.75, color='skyblue', edgecolor='black')
    ax1.axvline(universe_coherence, color='red', linestyle='--', linewidth=2, label=f'Universe Coherence: {universe_coherence:.2f}')
    ax1.set_xlabel('Coherence Score')
    ax1.set_ylabel('Frequency')
    ax1.set_title('Coherence of Sampled Universes')
    ax1.legend()
    ax1.grid(True, linestyle='--', alpha=0.6)

    # Plot 2: Fertility distribution with Universe's value
    ax2 = axes[1]
    ax2.hist(df['fertility'], bins=50, alpha=0.75, color='lightgreen', edgecolor='black')
    ax2.axvline(universe_fertility, color='red', linestyle='--', linewidth=2, label=f'Universe Fertility: {universe_fertility:.2f}')
    ax2.set_xlabel('Fertility Score')
    ax2.set_ylabel('Frequency')
    ax2.set_title('Fertility of Sampled Universes')
    ax2.legend()
    ax2.grid(True, linestyle='--', alpha=0.6)

    # Plot 3: Coherence vs. Fertility with Pareto Front and Universe's location
    ax3 = axes[2]
    ax3.scatter(df['coherence'], df['fertility'], s=15, alpha=0.25, c='gray', label='Sampled Universes')
    ax3.plot(pareto_df['coherence'], pareto_df['fertility'], color='red', linewidth=2, label='Pareto Front')
    ax3.scatter(universe_coherence, universe_fertility, s=150, color='gold', edgecolor='black', zorder=5, label='Our Universe', marker='*')
    ax3.set_xlabel('Coherence Score')
    ax3.set_ylabel('Fertility Score')
    ax3.set_title('Coherence vs. Fertility with Pareto Front')
    ax3.legend()
    ax3.grid(True, linestyle='--', alpha=0.6)
    ax3.set_xlim(0, 1)
    ax3.set_ylim(0, 1)

    # Adjust layout and save the plot
    plt.tight_layout()
    plt.savefig('universe_comparison_v3.png')
    plt.show()
    print("Plot 'universe_comparison_v3.png' saved successfully.")

if __name__ == '__main__':
    main()
